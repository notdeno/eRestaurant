@model SEDC.PracticalAspNet.Business.Model.DtoMenu

@{
    ViewBag.Title = "Details";
}

<h2>@Model.MenuName</h2>
<hr />
<h2>
    categories:
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#createCategoryModal">
        Add
    </button>
</h2>

<div id="app">

</div>

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>

<!--create category modal goes here-->
<div id="createCategoryModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <!--modal  header goes here-->
                <h5 class="modal-title">Add Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!--modal  body goes here-->
                <form id="form_createCategory" action="/asdasdasd" method="post">
                    <input type="hidden" name="menuId" value="@Model.Id" />
                    <div class="form-group">
                        <label for="categoryName">Category Name</label>
                        <input type="text" name="categoryName" class="form-control" placeholder="Category Name" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="btn_createCategory" type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

@section scripts{

    <script>

        $('#myModal').on('shown.bs.modal', function () {
            //$('#myInput').trigger('focus')
        });
        var State = function () {
            this.categories = [];
        }

        var App = function () {

            this.state = new State();

            var createCategoryUrl = '/categories/create';
            var getCategoriesUrl = '/categories';
            var btn_createCategory = $("#btn_createCategory");
            form_createCategory = $("#form_createCategory")[0];

            this.init = function () {
                render();
                this.getAllCategoriesForMenu();
                btn_createCategory.on('click', function (event) {
                    this.createCategory();
                });
            };

            this.getAllCategoriesForMenu = function () {
                $.post(getCategoriesUrl, request, function (data) {
                    this.state.categories = data;
                    render();
                });
            };

            this.createCategory = function () {
                var request = {
                    menuId: form_createCategory["menuId"].value,
                    categoryName: form_createCategory["categoryName"].value
                };
                $.post(createCategoryUrl, request, function (data) {
                    state.categories.push(data);
                    render();
                });
            };

            this.deleteCategory = function () {
                $.post(deleteCategoryUrl, request, function (data) {
                    state.categories = state.categories.filter(x => x.Id != data.Id);
                    render();
                });
            };

            this.editCategory = function () {
                //
                $.post(createCategoryUrl, request, function (data) {
                    var localCategories = this.state.categories.filter(x => x.Id == data.Id);

                    if (localCategories && localCategories.length) {
                        localCategories[0] = data;
                    }
                    render();
                });
            };

            this.renderPanels = function () {
                var result;
                $.each(this.state.categories, function (index, item) {
                    result += `<div class="panel panel-default">
                                                <div class="panel-heading">
                                                    <h4 class="panel-title">
                                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapse${item.Id}">
                                                            ${item.CategoryName}
                                                        </a>
                                                    </h4>
                                                </div>
                                                <div id="collapse${item.Id}" class="panel-collapse collapse in">
                                                    <div class="panel-body">
                                                        <table class="table table-responsive table-striped">
                                                            <thead>
                                                                <tr>
                                                                    <td>Item Id</td>
                                                                    <td>Name</td>
                                                                    <td>
                                                                        <button class="btn btn-success">+</button>
                                                                    </td>
                                                                </tr>
                                                            </thead>
                                                            <tbody>

                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
</div>`;
                });
                return result;
            }

            this.render()
            {
                var panels = '';
                $.each
                if (state.categories.length > 0) {
                    panels = this.renderPanels()
                }
                $("#app").append(`
           <div class="panel-group" id="accordion">
                         ${panels}
        </div>
        `);
            }
        };


        var app = new App();
        app.init();

    </script>
}
